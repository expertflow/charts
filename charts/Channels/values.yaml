# Default values for ef-cx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
# ███████ ██   ██ ██████  ███████ ██████  ████████ ███████ ██       ██████  ██     ██ 
# ██       ██ ██  ██   ██ ██      ██   ██    ██    ██      ██      ██    ██ ██     ██ 
# █████     ███   ██████  █████   ██████     ██    █████   ██      ██    ██ ██  █  ██ 
# ██       ██ ██  ██      ██      ██   ██    ██    ██      ██      ██    ██ ██ ███ ██ 
# ███████ ██   ██ ██      ███████ ██   ██    ██    ██      ███████  ██████   ███ ███  
#
# Globals Section:
#
# global.ingressRouter: Provides a central location for the FQDN that will be used \
#                       across the EF CX solution
# global.registry: when deploying solution with limited access to internet, \
#                  changing this will cause all subsequent image pulls from this registry. \
#                  Used as Variable in all sub-charts
#


global:
  ingressRouter: "devops.ef.com"
  ingressCertName: "ef-ingress-tls-secret"
  ingressClassName: "nginx"
  efCxReleaseName: "ef-cx"
  commonIngressAnnotations: {}
  ##    nginx.ingress.kubernetes.io/rewrite-target: /$2
  ##    nginx.ingress.kubernetes.io/use-regex: "true"
  imageRegistry: "gitimages.expertflow.com"
  imagePullSecrets: 
   - ef-gitlab-secret
  ## The CommonEnvVars are now part of the globals. Selective adaption to components is mandatory.
  efCommonVars_IS_WRAP_UP_ENABLED: true
  efCommonVars_WRAPUP_TIME: "60"
  efCommonVars_DEFAULT_ROOM_NAME: CC
  efCommonVars_DEFAULT_ROOM_DESCRIPTION: Contact Center Room
  efCommonVars_DEFAULT_ROOM_LABEL: CC
  efCommonVars_ROOM_IS_USER_ID: false
  efCommonVars_CONVERSATION_SEARCH_WINDOW_HRS: "24"
  efCommonVars_TZ: UTC
  efCommonVars_MASK_ATTRIBUTES_PATH: /sensitive.js
  efCommonVars_LOGGING_CONFIG: /logback/logback-spring.xml
  efCommonVars_IS_ENABLED_2FA: "false"
  efCommonVars_CHANNEL_2FA: "app"
  efCommonVars_TWILIO_SID: ""
  efCommonVars_TWILIO_VERIFY_SID: ""
  efCommonVars_TWILIO_AUTH_TOKEN: ""
  efCommonVars_TOPIC_CONCURRENCY_MIN: "2"
  efCommonVars_TOPIC_CONCURRENCY_MAX: "6"


# Change the below given paragraph when deploying an offline solution to pick the images from 
#  -- Local Repo running inside the Kubernetes Engine
#  -- Customer's own Repo requiring all images to be sorted locally 
#
# imageCredentials:
# imageCredentials.registry: provides the registry URL
# imageCredentials.username: username to use
# imageCredentials.password: Password for the user
# imageCredentials.email: an email address for the user
#
clusterDomain: cluster.local


imageCredentials:
  registry: gitimages.expertflow.com
  username: efcx
  password: RecRpsuH34yqp56YRFUb
  email: devops@expertflow.com

##############################360-connector##############################
connect360:
   enabled: true
   replicaCount: 1
   image:
      repository: cim/360-connector
      tag: 4.7
   efConnectionVars: true
   efEnvironmentVars: false
   containerPorts:
      - name: "http-360c-8080"
        containerPort: 8080
   extraEnvVars:
      - name: TZ
        value: "{{ .Values.global.efCommonVars_TZ }}"
      - name: LOGGING_CONFIG
        value: '{{ .Values.global.efCommonVars_LOGGING_CONFIG }}'
      - name: MASKING_LAYOUT_CLASS
        value: '{{ .Values.global.efCommonVars_MASKING_LAYOUT_CLASS }}'
      - name: CCM_URL
        value: "http://{{ .Values.global.efCxReleaseName  }}-ccm-svc.{{ .Release.Namespace }}.svc:8081"
      - name: FILE_ENGINE_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-file-engine-svc.{{ .Release.Namespace }}.svc:8080"
      - name: MASKING_LAYOUT_CLASS
        value: "com.ef.connector360.utility.MaskingPatternLayout"
   service:
      enabled: true
      port: 8080
      portName: "http-360c-8080"
      targetPort: "http-360c-8080"
   ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/use-regex: "true"
      path: /360connector(/|$)(.*)
      pathType: ImplementationSpecific
   extraVolumes:
      - name: ef-logback
        configMap:
           name: ef-logback-cm
   extraVolumeMounts:
      - name: ef-logback
        mountPath: /logback



##############################facebook-connector##############################
facebook-connector:
   enabled: true
   replicaCount: 1
   image:       
      repository: cim/facebook-connector
      tag: 4.7
   efConnectionVars: false
   efEnvironmentVars: true 
   containerPorts:
      - name: "http-fb-co-8080"
        containerPort: 8080
   extraEnvVars:
      - name: TZ
        value: '{{ .Values.global.efCommonVars_TZ }}'
      - name: LOGGING_CONFIG
        value: '{{ .Values.global.efCommonVars_LOGGING_CONFIG  }}'
      - name: CCM_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-ccm-svc.{{ .Release.Namespace }}.svc:8081"
      - name: FILE_ENGINE_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-file-engine-svc.{{ .Release.Namespace }}.svc:8080"
      - name: MASKING_LAYOUT_CLASS
        value: "com.ef.connector.facebookconnector.utility.MaskingPatternLayout"
   service:
      enabled: true
      port: 8080
      portName: "http-fb-co-8080"
      targetPort: "http-fb-co-8080"
   ingress: 
      enabled: true 
      annotations:
         nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
         #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"
         nginx.ingress.kubernetes.io/rewrite-target: /$2
         nginx.ingress.kubernetes.io/use-regex: "true"
      path: /facebook-connector(/|$)(.*)
      pathType: ImplementationSpecific
   extraVolumes:
      - name: ef-logback
        configMap:
            name: ef-logback-cm
   extraVolumeMounts:
      - name: ef-logback
        mountPath: /logback



##############################instagram-connector##############################
instagram-connector:
   enabled: true
   replicaCount: 1
   image:       
      repository: cim/instagram-connector
      tag: 4.7
   efConnectionVars: false
   efEnvironmentVars: false 
   containerPorts:
      - name: "http-in-co-8080"
        containerPort: 8080
   extraEnvVars:
      - name: TZ
        value: '{{ .Values.global.efCommonVars_TZ }}'
      - name: LOGGING_CONFIG
        value: '{{ .Values.global.efCommonVars_LOGGING_CONFIG  }}'
      - name: CCM_URL
        value: "http://{{ .Values.global.efCxReleaseName  }}-ccm-svc.{{ .Release.Namespace }}.svc:8081"
      - name: FILE_ENGINE_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-file-engine-svc.{{ .Release.Namespace }}.svc:8080"
      - name: MASKING_LAYOUT_CLASS
        value: "com.ef.connector.instagramconnector.utils.MaskingPatternLayout"
   service:
      enabled: true
      port: 8080
      portName: "http-in-co-8080"
      targetPort: "http-in-co-8080"
   ingress: 
      enabled: true 
      annotations:
         nginx.ingress.kubernetes.io/rewrite-target: /$2
         nginx.ingress.kubernetes.io/use-regex: "true"
         nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
         #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"
      path: /instagram-connector(/|$)(.*)
      pathType: ImplementationSpecific
   extraVolumes:
      - name: ef-logback
        configMap:
            name: ef-logback-cm
   extraVolumeMounts:
      - name: ef-logback
        mountPath: /logback



##############################smpp-connector##############################
smpp-connector:
   enabled: true
   replicaCount: 1
   image:       
      repository: cti/hc_smpp_connector
      tag: 4.7
   efConnectionVars: true
   efEnvironmentVars: false
   containerPorts:
      - name: "http-sm-cn-8115"
        containerPort: 8115
   extraEnvVars:
      - name: LOGGING_CONFIG
        value: '{{ .Values.global.efCommonVars_LOGGING_CONFIG  }}'
      - name: TZ
        value: '{{ .Values.global.efCommonVars_TZ }}'
      - name: CCM_CONFIG_URL
        value: "https://{{ .Values.global.ingressRouter  }}/ccm/channel-connectors/configurations/"
      - name: SPRING_PORT
        value: "8115"
      - name: SERVICE_IDENTIFIER
        value: "195"
      - name: MASKING_LAYOUT_CLASS
        value: "com.ef.sms.utils.MaskingPatternLayout"
   service:
      enabled: true
      port: 8115
      portName: "http-sm-cn-8115"
      targetPort: "http-sm-cn-8115"
   ingress: 
      enabled: true 
      annotations:
         nginx.ingress.kubernetes.io/rewrite-target: /$2
         nginx.ingress.kubernetes.io/use-regex: "true"
         nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
         #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"
      path: /smppconnector(/|$)(.*)
      pathType: ImplementationSpecific
   extraVolumes:
      - name: ef-logback
        configMap:
            name: ef-logback-cm
   extraVolumeMounts:
      - name: ef-logback
        mountPath: /logback

##############################telegram-connector##############################
telegram-connector:
   enabled: true
   replicaCount: 1
   image:       
      repository: cim/telegram-connector
      tag: 4.7
   efConnectionVars: false
   efEnvironmentVars: false
   containerPorts:
      - name: "http-te-co-8664"
        containerPort: 8664
   extraEnvVars:
      - name: TZ
        value: '{{ .Values.global.efCommonVars_TZ }}'
      - name: LOGGING_CONFIG
        value: '{{ .Values.global.efCommonVars_LOGGING_CONFIG  }}'
      - name: CHANNEL_MANAGER_BASE_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-ccm-svc.{{ .Release.Namespace }}.svc:8081"
      - name: FILE_ENGINE_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-file-engine-svc.{{ .Release.Namespace }}.svc:8080"
      - name: MASKING_LAYOUT_CLASS
        value: "com.ef.spring.util.MaskingPatternLayout"
      - name: LOG_LEVEL
        value: "INFO"
   service:
      enabled: true
      port: 8664
      portName: "http-te-co-8664"
      targetPort: "http-te-co-8664"
   ingress: 
      enabled: true 
      annotations:
         nginx.ingress.kubernetes.io/rewrite-target: /$2
         nginx.ingress.kubernetes.io/use-regex: "true"
         nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
         #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"
      path: /telegram-connector(/|$)(.*)
      pathType: ImplementationSpecific
   extraVolumes:
      - name: ef-logback
        configMap:
            name: ef-logback-cm
   extraVolumeMounts:
      - name: ef-logback
        mountPath: /logback


##############################twilio-connector##############################
twilio-connector:
   enabled: true
   replicaCount: 1
   image:       
      repository: cim/twilio-connector
      tag: 4.7
   efConnectionVars: false
   efEnvironmentVars: false
   containerPorts:
      - name: "http-tw-co-8085"
        containerPort: 8085
   extraEnvVars:
      - name: TZ
        value: '{{ .Values.global.efCommonVars_TZ }}'
      - name: LOGGING_CONFIG
        value: '{{ .Values.global.efCommonVars_LOGGING_CONFIG  }}'
      - name: CCM_FQDN
        value: "http://{{ .Values.global.efCxReleaseName }}-ccm-svc.{{ .Release.Namespace }}.svc:8081"
      - name: FILE_ENGINE_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-file-engine-svc.{{ .Release.Namespace }}.svc:8080"
      - name: MASKING_LAYOUT_CLASS
        value: "com.ef.twilio.connector.util.MaskingPatternLayout"
   service:
      enabled: true
      port: 8085
      portName: "http-tw-co-8085"
      targetPort: "http-tw-co-8085"
   ingress: 
      enabled: true 
      annotations:
         nginx.ingress.kubernetes.io/rewrite-target: /$2
         nginx.ingress.kubernetes.io/use-regex: "true"
         nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
         #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"
      path: /twilio-connector(/|$)(.*)
      pathType: ImplementationSpecific
   extraVolumes:
      - name: ef-logback
        configMap:
            name: ef-logback-cm
   extraVolumeMounts:
      - name: ef-logback
        mountPath: /logback


##############################twitter-connector##############################
twitter-connector:
   enabled: true
   replicaCount: 1
   image:       
      repository: cim/twitter-connector
      tag: 4.7
   efConnectionVars: true
   efEnvironmentVars: false
   containerPorts:
      - name: "http-tt-co-8080"
        containerPort: 8080
   extraEnvVars:
      - name: TZ
        value: '{{ .Values.global.efCommonVars_TZ }}'
      - name: CCM_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-ccm-svc.{{ .Release.Namespace }}.svc:8081"
      - name: FILE_ENGINE_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-file-engine-svc.{{ .Release.Namespace }}.svc:8080"
   service:
      enabled: true
      port: 8080
      portName: "http-tt-co-8080"
      targetPort: "http-tt-co-8080"
   ingress: 
      enabled: true 
      annotations:
         nginx.ingress.kubernetes.io/rewrite-target: /$2
         nginx.ingress.kubernetes.io/use-regex: "true"
         nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
         #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"

      path: /twitter-connector(/|$)(.*)
      pathType: ImplementationSpecific


##############################viber-connector##############################
viber-connector:
   enabled: true
   replicaCount: 1
   image:       
      repository: cim/viber-connector
      tag: 4.7
   efConnectionVars: false
   efEnvironmentVars: false
   containerPorts:
      - name: "http-vb-co-8080"
        containerPort: 8080
   extraEnvVars:
      - name: TZ
        value: '{{ .Values.global.efCommonVars_TZ }}'
      - name: LOGGING_CONFIG
        value: '{{ .Values.global.efCommonVars_LOGGING_CONFIG  }}'
      - name: CCM_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-ccm-svc.{{ .Release.Namespace }}.svc:8081"
      - name: FILE_ENGINE_URL
        value: "http://{{ .Values.global.efCxReleaseName }}-file-engine-svc.{{ .Release.Namespace }}.svc:8080"
      - name: MASKING_LAYOUT_CLASS
        value: "com.ef.connector.utils.MaskingPatternLayout"
   service:
      enabled: true
      port: 8080
      portName: "http-vb-co-8080"
      targetPort: "http-vb-co-8080"
   ingress: 
      enabled: true 
      annotations:
         nginx.ingress.kubernetes.io/rewrite-target: /$2
         nginx.ingress.kubernetes.io/use-regex: "true"
         nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
         #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"
      path:  /viber-connector(/|$)(.*)
      pathType: ImplementationSpecific
   extraVolumes:
      - name: ef-logback
        configMap:
            name: ef-logback-cm
   extraVolumeMounts:
      - name: ef-logback
        mountPath: /logback

