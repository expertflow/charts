# Default values for ef-cx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
# ███████ ██   ██ ██████  ███████ ██████  ████████ ███████ ██       ██████  ██     ██
# ██       ██ ██  ██   ██ ██      ██   ██    ██    ██      ██      ██    ██ ██     ██
# █████     ███   ██████  █████   ██████     ██    █████   ██      ██    ██ ██  █  ██
# ██       ██ ██  ██      ██      ██   ██    ██    ██      ██      ██    ██ ██ ███ ██
# ███████ ██   ██ ██      ███████ ██   ██    ██    ██      ███████  ██████   ███ ███
#

global:
   efCxReleaseName: "ef-cx"
   ingressRouter: devops.ef.com
clusterDomain: cluster.local
####################### Middleware CronJob Definitions ######################
middlewareCronJob:
   enabled: true
   labels: {}
   containerSecurityContext:
     enabled: false
     seLinuxOptions: {}
     runAsUser: 1001
     runAsGroup: 1001
     runAsNonRoot: true
     privileged: false
     readOnlyRootFilesystem: true
     allowPrivilegeEscalation: false
     capabilities:
       drop: ["ALL"]
     seccompProfile:
       type: "RuntimeDefault"
   annotations: {}
   schedule: "*/5 * * * *"
   failedJobsHistoryLimit: 1
   successfulJobsHistoryLimit: 5
   startingDeadlineSeconds: 20
   concurrencyPolicy: "Forbid"
   backoffLimit: 0
   restartPolicy: OnFailure
   imagePullSecret: ef-gitlab-secret
   image: gitimages.expertflow.com/voice-recording-solution/recording-link-activities:4.7_f-CCC-1493
   extraEnvVars:
     - name: LOG_LEVEL
       value: DEBUG
     - name: RECORDING_BACKEND
       value: ELEVEO
     - name: ELEVEO_PASSWORD
       value: "abc123"
     - name: ELEVEO_URL
       value: http://ELEVEO-IP
     - name: ELEVEO_USERNAME
       value: ccmanager
     - name: ELEVEO_TIMEZONE
       value: Asia/Karachi
     - name: ELEVEO_PROCESSING_TIME
       value: "10"
     - name: ELEVEO_MAX_CALL_TIME
       value: "60"
     - name: CX_FQDN
       value: https://{{ .Values.global.ingressRouter }}
     - name: MIDDLEWARE_API
       value: https://{{ .Values.global.ingressRouter }}/recording-middleware
     - name: RETRIEVAL_INTERVAL
       value: "5"
     - name: TRUST_STORE_PASSWORD
       value: "Expertflow123"
     - name: KEY_STORE_PASSWORD
       value: "Expertflow123"
     - name: CX_CONVERSATION_MANAGER
       value: "http://{{ .Values.global.efCxReleaseName }}-conversation-manager-svc.{{ .Release.Namespace }}.svc:8080"
   siteEnvVars: []
   configKeys:
     - name: MONGODB_CERTIFICATE_PATH
       valueFrom:
         configMapKeyRef:
           key: MONGODB_CERTIFICATE_PATH
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_AUTHENTICATION_DATABASE
       valueFrom:
         configMapKeyRef:
           key: MONGODB_AUTHENTICATION_DATABASE
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_ENABLE_SSL
       valueFrom:
         configMapKeyRef:
           key: MONGODB_ENABLE_SSL
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_HOST
       valueFrom:
         configMapKeyRef:
           key: MONGODB_HOST
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_PASSWORD
       valueFrom:
         configMapKeyRef:
           key: MONGODB_PASSWORD
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_REPLICASET
       valueFrom:
         configMapKeyRef:
           key: MONGODB_REPLICASET
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_READ_PREFERENCE
       valueFrom:
         configMapKeyRef:
           key: MONGODB_READ_PREFERENCE
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_REPLICASET_ENABLED
       valueFrom:
         configMapKeyRef:
           key: MONGODB_REPLICASET_ENABLED
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_USERNAME
       valueFrom:
         configMapKeyRef:
           key: MONGODB_USERNAME
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_USERNAME
       valueFrom:
         configMapKeyRef:
           key: MONGODB_USERNAME
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_CLIENT_CERT
       valueFrom:
         configMapKeyRef:
           key: MONGODB_CLIENT_CERT
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
     - name: MONGODB_CA_CERT
       valueFrom:
         configMapKeyRef:
           key: MONGODB_CA_CERT
           name: "{{ .Values.global.efCxReleaseName }}-efconnections-cm"
   resourcesPreset: "none"
   resources: {}
   extraVolumeMounts: 
      - name: mongo-mongodb-ca
        mountPath: /mongo
   extraVolumes:
      - name: mongo-mongodb-ca
        secret:
          secretName: mongo-mongodb-ca

