# Default values for ef-cx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
# ███████ ██   ██ ██████  ███████ ██████  ████████ ███████ ██       ██████  ██     ██ 
# ██       ██ ██  ██   ██ ██      ██   ██    ██    ██      ██      ██    ██ ██     ██ 
# █████     ███   ██████  █████   ██████     ██    █████   ██      ██    ██ ██  █  ██ 
# ██       ██ ██  ██      ██      ██   ██    ██    ██      ██      ██    ██ ██ ███ ██ 
# ███████ ██   ██ ██      ███████ ██   ██    ██    ██      ███████  ██████   ███ ███  
#
# Globals Section:
#
# global.ingressRouter: Provides a central location for the FQDN that will be used \
#                       across the EF CX solution
# global.registry: when deploying solution with limited access to internet, \
#                  changing this will cause all subsequent image pulls from this registry. \
#                  Used as Variable in all sub-charts
#


global:
  ingressRouter: "devops.ef.com"
  ingressCertName: "ef-ingress-tls-secret"
  ingressClassName: "nginx"
  efCxReleaseName: "ef-cx"
  commonIngressAnnotations: {}
  ##    nginx.ingress.kubernetes.io/rewrite-target: /$2
  ##    nginx.ingress.kubernetes.io/use-regex: "true"
  imageRegistry: "gitimages.expertflow.com"
  imagePullSecrets: 
   - ef-gitlab-secret
  ## The CommonEnvVars are now part of the globals. Selective adaption to components is mandatory.
  efCommonVars_IS_WRAP_UP_ENABLED: true
  efCommonVars_WRAPUP_TIME: "60"
  efCommonVars_DEFAULT_ROOM_NAME: CC
  efCommonVars_DEFAULT_ROOM_DESCRIPTION: Contact Center Room
  efCommonVars_DEFAULT_ROOM_LABEL: CC
  efCommonVars_ROOM_IS_USER_ID: false
  efCommonVars_CONVERSATION_SEARCH_WINDOW_HRS: "24"
  efCommonVars_TZ: UTC
  efCommonVars_MASK_ATTRIBUTES_PATH: /sensitive.js
  efCommonVars_LOGGING_CONFIG: /logback/logback-spring.xml
  efCommonVars_IS_ENABLED_2FA: "false"
  efCommonVars_CHANNEL_2FA: "app"
  efCommonVars_TWILIO_SID: ""
  efCommonVars_TWILIO_VERIFY_SID: ""
  efCommonVars_TWILIO_AUTH_TOKEN: ""
  efCommonVars_TOPIC_CONCURRENCY_MIN: "2"
  efCommonVars_TOPIC_CONCURRENCY_MAX: "6"

# Change the below given paragraph when deploying an offline solution to pick the images from 
#  -- Local Repo running inside the Kubernetes Engine
#  -- Customer's own Repo requiring all images to be sorted locally 
#
# imageCredentials:
# imageCredentials.registry: provides the registry URL
# imageCredentials.username: username to use
# imageCredentials.password: Password for the user
# imageCredentials.email: an email address for the user
#
clusterDomain: cluster.local

eleveoConnectionVars:
    DB_DRIVER: Integrated Security=false; persist security info=True;TrustServerCertificate=True; MultipleActiveResultSets=true
    DB_HOST: 192.168.1.77
    DB_NAME: EleveoConnector
    DB_USERNAME: davidSQL
    DB_PASSWORD: password
    DB_PORT: "1433"
    ELEVEO_USERNAME: david
    ELEVEO_PW: zoomcallrec1234
    TIMEZONE: CET
    ELEVEO_AUTHENTICATION_URL: http://192.168.1.237
    ELEVEO_RECORDERQM_URL: http://192.168.1.237
    CIM_URL: https://cim-dev2.expertflow.com
    EFCXMIDDLEWAREAPI_URL: https://middlewareapi.com
    INTERVAL: "15"
    LOG_PATH: /log

##############################eleveo-api##############################
eleveo-api:
   enabled: true
   replicaCount: 1
   image:       
      repository: wfm-connectors/eleveovr_2_ef-cx
      tag: 1-0-0
   eleveoConnectionVars: true
   containerPorts:
      - name: "http-el-co-8080"
        containerPort: 8080
   extraEnvVars:
      - name: DOMAINS
        value: "http://*:80,https://*:443"
      - name: ASPNETCORE_ENVIRONMENT
        value: Production
      - name: ASPNETCORE_URLS
        value: "http://+:8080"
   service:
      enabled: true
      port: 8080
      portName: "http-el-co-8080"
      targetPort: "http-el-co-8080"
   ingress: 
      enabled: true 
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/use-regex: "true"
      path: /eleveo-connector-api(/|$)(.*)
      pathType: ImplementationSpecific
   extraVolumes: []
   extraVolumeMounts: []

##############################eleveo-Runner##############################
eleveo-runner:
   enabled: true
   replicaCount: 1
   image:
      repository: wfm-connectors/ef_cx_eleveo_recording_runner
      tag: 1-0-0
   eleveoConnectionVars: true
   containerPorts:
      - name: "http-el-ru-8080"
        containerPort: 8080
   extraEnvVars:
      - name: ELEVEO_USERNAME
        value: ccmanager
      - name: ELEVEO_PW
        value: zoomcallrec1234
      - name: EFCX_MIDDLEWARE_BASE_URL
        value: https://{{ .Values.global.ingressrouter }}/eleveo-connector-api/ConversationData/GetMp3
      - name: PAGE_SIZE
        value: "500"
   service:
      enabled: true
      port: 8080
      portName: "http-el-ru-8080"
      targetPort: "http-el-ru-8080"
   ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/use-regex: "true"
      path: /eleveo-recording-runner(/|$)(.*)
      pathType: ImplementationSpecific
   extraVolumes: []
   extraVolumeMounts: []

