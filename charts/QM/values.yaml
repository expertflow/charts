# Default values for ef-cx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
# ███████ ██   ██ ██████  ███████ ██████  ████████ ███████ ██       ██████  ██     ██
# ██       ██ ██  ██   ██ ██      ██   ██    ██    ██      ██      ██    ██ ██     ██
# █████     ███   ██████  █████   ██████     ██    █████   ██      ██    ██ ██  █  ██
# ██       ██ ██  ██      ██      ██   ██    ██    ██      ██      ██    ██ ██ ███ ██
# ███████ ██   ██ ██      ███████ ██   ██    ██    ██      ███████  ██████   ███ ███
#
# Globals Section:
#
# global.ingressRouter: Provides a central location for the FQDN that will be used \
#                       across the EF CX solution
# global.registry: when deploying solution with limited access to internet, \
#                  changing this will cause all subsequent image pulls from this registry. \
#                  Used as Variable in all sub-charts
#

global:
  ingressRouter: "devops212.ef.com"
  ingressCertName: "ef-ingress-tls-secret"
  ingressClassName: "nginx"
  efCxReleaseName: "ef-cx"
  commonIngressAnnotations: {}
  ##    nginx.ingress.kubernetes.io/rewrite-target: /$2
  ##    nginx.ingress.kubernetes.io/use-regex: "true"
  imageRegistry: "gitimages.expertflow.com"
  imagePullSecrets:
  # --- Added APISIX Global Config ---
    - ef-gitlab-secret
#  -- Local Repo running inside the Kubernetes Engine
#  -- Customer's own Repo requiring all images to be sorted locally
#
# imageCredentials:
# imageCredentials.registry: provides the registry URL
# imageCredentials.username: username to use
# imageCredentials.password: Password for the user
# imageCredentials.email: an email address for the user
#
clusterDomain: cluster.local

imageCredentials:
  registry: gitimages.expertflow.com
  username: efcx
  password: RecRpsuH34yqp56YRFUb
  email: devops@expertflow.com

##############################qm-backend##############################
qm-backend:
  enabled: true
  image:
    repository: cim/qm-backend/build
    tag: 4.10_b-CIM-30591
  efConnectionVars: false
  efEnvironmentVars: false
  containerPorts:
    - name: "http-qmbe3000"
      containerPort: 3000
  extraEnvVars:
    - name: PG_PORT
      value: "5432"
    - name: LOG_LEVEL
      value: debug
    - name: PG_USERNAME
      value: sa
    - name: PG_PASSWORD
      value: "Expertflow123"
    - name: PG_DATABASE
      value: "qm_db"
    - name: CONVERSATION_MANAGER_URL
      value: http://{{ .Values.global.efCxReleaseName }}-conversation-manager-svc.{{ .Release.Namespace }}.svc:8080
    - name: PG_HOST
      value: ef-postgresql.ef-external.svc.cluster.local
    - name: UNIFIED_ADMIN_URL
      value: "https://{{ .Values.global.ingressRouter  }}/unified-admin/"
    - name: KEYCLOAK_TEAM_TYPE
      value: CX
    - name: KEYCLOAK_BEARER_ONLY
      value: "true"
    - name: KEYCLOAK_CLIENT_DB_ID
      value: ef61df80-061c-4c29-b9ac-387e6bf67052
    - name: KEYCLOAK_CLIENT_ID
      value: cim
    - name: KEYCLOAK_CONFIDENTIAL_PORT
      value: "0"
    - name: KEYCLOAK_CREDENTIALS
      value: '{"secret": "ef61df80-061c-4c29-b9ac-387e6bf67052"}'
    - name: KEYCLOAK_GRANT_TYPE
      value: "password"
    - name: KEYCLOAK_GRANT_TYPE_PAT
      value: "client_credentials"
    - name: KEYCLOAK_HOST
      value: "https://{{ .Values.global.ingressRouter  }}/auth/"
    - name: KEYCLOAK_PASSWORD_ADMIN
      value: admin
    - name: KEYCLOAK_POLICY_ENFORCER
      value: "{}"
    - name: KEYCLOAK_REALM
      value: expertflow
    - name: KEYCLOAK_RESOURCE
      value: cim
    - name: KEYCLOAK_SCOPE_NAME
      value: "Any default scope"
    - name: KEYCLOAK_SSL_REQUIRED
      value: external
    - name: KEYCLOAK_USE_RESOURCE_ROLE_MAPPINGS
      value: "true"
    - name: KEYCLOAK_USERNAME_ADMIN
      value: admin
    - name: KEYCLOAK_VERIFY_TOKEN_AUDIENCE
      value: "false"
    - name: MINIMUM_BULK_NOTIFICATION_INTERVAL
      value: "30"
  siteEnvVars: []
  configKeys: []
  service:
    enabled: true
    port: 3000
    portName: "http-qmbe3000"
    targetPort: "http-qmbe3000"
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE,PATCH
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/configuration-snippet:
        'more_set_headers "Access-Control-Allow-Origin:
          $http_origin";'
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      #cert-manager.io/cluster-issuer: "ef-letsencrypt-prod"
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      nginx.ingress.kubernetes.io/use-regex: "true"
    longLivedConnection:
      path: "/qm-backend/(notification/[^/]+/sse)(/|$)"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "43200"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "43200"
    path: "/qm-backend(/|$)(.*)"
    pathType: ImplementationSpecific
  extraVolumes:
    - name: ef-postgresql-crt
      secret:
        secretName: ef-postgresql-crt
  extraVolumeMounts:
    - name: ef-postgresql-crt
      mountPath: /postgresql
##############################qm-connector##############################
qm-connector:
  enabled: false
  image:
    repository: voice-recording-solution/qm-connector
    tag: 4.10_b-CIM-30591
  containerPorts: []
  extraEnvVars:
    - name: RECORDING_SERVER_FQDN
      value: https://192.168.1.126
    - name: EFCX_FQDN
      value: https://efcx-frontend.expertflow.com
    - name: CALL_BACK_URL
      value: http://webhook.site/5ba1c6f9-d086-48cb-8341-c76cd13e4a80
    - name: UCCE_ENGINE
      value: sqlserver
    - name: UCCE_IP
      value: "192.168.1.72"
    - name: UCCE_PORT
      value: "1433"
    - name: UCCE_DATABASE
      value: uc126_awdb
    - name: UCCE_USERNAME
      value: sa
    - name: UCCE_PASSWORD
      value: Expertflow464
    - name: UCCE_OB_SERVICE_IDENTIFIER
      value: "8899"
    - name: KEYCLOAK_REALM_NAME
      value: expertflow
    - name: KEYCLOAK_CLIENT_ID
      value: cim
    - name: KEYCLOAK_CLIENT_SECRET
      value: ef61df80-061c-4c29-b9ac-387e6bf67052
    - name: KEYCLOAK_USERNAME
      value: vrs
    - name: KEYCLOAK_PASSWORD
      value: vrs
    - name: KEYCLOAK_AGENT_ROLE_NAME
      value: agent
    - name: KEYCLOAK_AGENT_ROLE_ID
      value: 1903735d-5bcc-4253-a05e-ea1487195c9c
    - name: DB_NAME
      value: vrs5
    - name: DB_USER
      value: sa
    - name: DB_PASSWORD
      value: Expertflow123
    - name: DB_ENGINE
      value: sqlserver
    - name: DB_HOST
      value: 192.168.1.126
    - name: DB_PORT
      value: "1433"
    - name: DB_DRIVER
      value: com.microsoft.sqlserver.jdbc.SQLServerDriver
  siteEnvVars: []
  configKeys: []
  service:
    enabled: false
    port: ""
    portName: ""
    targetPort: ""
  ingress: {enabled: false} # <-- Explicitly disable standard ingress, replacing old block
  # No apisixRoutes defined as component is disabled and 
  extraVolumes: []
  extraVolumeMounts: []
